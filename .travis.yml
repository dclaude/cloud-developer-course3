language: minimal
#
services: docker
#
env:
  - DOCKER_COMPOSE_VERSION=1.23.2
#
before_install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
#
install:
  - docker-compose -f deployment/docker/docker-compose-build.yaml build --parallel
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker-compose -f deployment/docker/docker-compose-build.yaml push
  # retrieve the "partial" kubeconfig file from github private repo
  - curl -o udagram-cluster-kubeconfig https://$GITHUB_ACCESS_TOKEN@raw.githubusercontent.com/dclaude/udagram-cluster/master/udagram-cluster-kubeconfig
  # tell kubectl to use this kubeconfig file
  - export KUBECONFIG=$PWD/udagram-cluster-kubeconfig
  # fill the missing values in the "partial" kubeconfig file from travis env variables
  - kubectl config set clusters.udagram-cluster.certificate-authority-data "$KUBE_CLUSTER_CERTIFICATE"
  - kubectl config set users.kubernetes-admin.client-certificate-data "$KUBE_CLIENT_CERTIFICATE"
  - kubectl config set users.kubernetes-admin.client-key-data "$KUBE_CLIENT_KEY"
  # deploy the new image in our cluster (use the trick from https://stackoverflow.com/questions/40366192/kubernetes-how-to-make-deployment-to-update-image):
  - kubectl patch deployment backend-feed -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
  - kubectl patch deployment backend-user -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
  - kubectl patch deployment frontend -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
  - kubectl patch deployment reverseproxy -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
